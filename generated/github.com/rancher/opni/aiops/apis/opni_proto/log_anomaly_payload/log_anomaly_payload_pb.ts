// @generated by protoc-gen-es v1.2.1 with parameter "target=ts,import_extension=none"
// @generated from file github.com/rancher/opni/aiops/apis/opni_proto/log_anomaly_payload/log_anomaly_payload.proto (package log_anomaly_payload, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message log_anomaly_payload.Payload
 */
export class Payload extends Message<Payload> {
  /**
   * @generated from field: string _id = 1;
   */
  Id = "";

  /**
   * @generated from field: string cluster_id = 2;
   */
  clusterId = "";

  /**
   * @generated from field: string log = 3;
   */
  log = "";

  /**
   * @generated from field: string masked_log = 4;
   */
  maskedLog = "";

  /**
   * @generated from field: string anomaly_level = 5;
   */
  anomalyLevel = "";

  /**
   * @generated from field: string log_type = 6;
   */
  logType = "";

  /**
   * @generated from field: string template_matched = 7;
   */
  templateMatched = "";

  /**
   * @generated from field: int64 template_cluster_id = 8;
   */
  templateClusterId = protoInt64.zero;

  /**
   * @generated from field: string inference_model = 9;
   */
  inferenceModel = "";

  /**
   * @generated from field: float opnilog_confidence = 10;
   */
  opnilogConfidence = 0;

  /**
   * @generated from field: string pod_name = 11;
   */
  podName = "";

  /**
   * @generated from field: string namespace_name = 12;
   */
  namespaceName = "";

  /**
   * @generated from field: string deployment = 13;
   */
  deployment = "";

  /**
   * @generated from field: string service = 14;
   */
  service = "";

  constructor(data?: PartialMessage<Payload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "log_anomaly_payload.Payload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "log", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "masked_log", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "anomaly_level", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "log_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "template_matched", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "template_cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "inference_model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "opnilog_confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 11, name: "pod_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "namespace_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "deployment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Payload {
    return new Payload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Payload {
    return new Payload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Payload {
    return new Payload().fromJsonString(jsonString, options);
  }

  static equals(a: Payload | PlainMessage<Payload> | undefined, b: Payload | PlainMessage<Payload> | undefined): boolean {
    return proto3.util.equals(Payload, a, b);
  }
}

/**
 * @generated from message log_anomaly_payload.PayloadList
 */
export class PayloadList extends Message<PayloadList> {
  /**
   * @generated from field: repeated log_anomaly_payload.Payload items = 1;
   */
  items: Payload[] = [];

  constructor(data?: PartialMessage<PayloadList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "log_anomaly_payload.PayloadList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "items", kind: "message", T: Payload, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PayloadList {
    return new PayloadList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PayloadList {
    return new PayloadList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PayloadList {
    return new PayloadList().fromJsonString(jsonString, options);
  }

  static equals(a: PayloadList | PlainMessage<PayloadList> | undefined, b: PayloadList | PlainMessage<PayloadList> | undefined): boolean {
    return proto3.util.equals(PayloadList, a, b);
  }
}

