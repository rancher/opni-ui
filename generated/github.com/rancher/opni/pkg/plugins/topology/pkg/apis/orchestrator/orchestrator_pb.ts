// @generated by protoc-gen-es v1.2.1 with parameter "target=ts,import_extension=none"
// @generated from file github.com/rancher/opni/pkg/plugins/topology/pkg/apis/orchestrator/orchestrator.proto (package orchestrator, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum orchestrator.InstallState
 */
export enum InstallState {
  /**
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * @generated from enum value: NotInstalled = 1;
   */
  NotInstalled = 1,

  /**
   * @generated from enum value: Updating = 2;
   */
  Updating = 2,

  /**
   * @generated from enum value: Installed = 3;
   */
  Installed = 3,

  /**
   * @generated from enum value: Uninstalling = 4;
   */
  Uninstalling = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(InstallState)
proto3.util.setEnumType(InstallState, "orchestrator.InstallState", [
  { no: 0, name: "Unknown" },
  { no: 1, name: "NotInstalled" },
  { no: 2, name: "Updating" },
  { no: 3, name: "Installed" },
  { no: 4, name: "Uninstalling" },
]);

/**
 * @generated from message orchestrator.InstallStatus
 */
export class InstallStatus extends Message<InstallStatus> {
  /**
   * @generated from field: orchestrator.InstallState state = 1;
   */
  state = InstallState.Unknown;

  /**
   * @generated from field: string version = 2;
   */
  version = "";

  /**
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string } = {};

  constructor(data?: PartialMessage<InstallStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "orchestrator.InstallStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(InstallState) },
    { no: 2, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstallStatus {
    return new InstallStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstallStatus {
    return new InstallStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstallStatus {
    return new InstallStatus().fromJsonString(jsonString, options);
  }

  static equals(a: InstallStatus | PlainMessage<InstallStatus> | undefined, b: InstallStatus | PlainMessage<InstallStatus> | undefined): boolean {
    return proto3.util.equals(InstallStatus, a, b);
  }
}

