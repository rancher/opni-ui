// @generated by protoc-gen-es v1.2.1 with parameter "target=ts,import_extension=none"
// @generated from file github.com/rancher/opni/pkg/metrics/desc/desc.proto (package desc, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { LabelPair } from "../../../../../prometheus/client_model/io/prometheus/client/metrics_pb";

/**
 * @generated from message desc.Desc
 */
export class Desc extends Message<Desc> {
  /**
   * @generated from field: string FQName = 1;
   */
  FQName = "";

  /**
   * @generated from field: string Help = 2;
   */
  Help = "";

  /**
   * @generated from field: repeated io.prometheus.client.LabelPair ConstLabelPairs = 3;
   */
  ConstLabelPairs: LabelPair[] = [];

  /**
   * @generated from field: repeated string VariableLabels = 4;
   */
  VariableLabels: string[] = [];

  /**
   * @generated from field: uint64 ID = 5;
   */
  ID = protoInt64.zero;

  /**
   * @generated from field: uint64 DimHash = 6;
   */
  DimHash = protoInt64.zero;

  /**
   * @generated from field: fixed64 _padding1 = 7;
   */
  Padding1 = protoInt64.zero;

  /**
   * @generated from field: fixed64 _padding2 = 8;
   */
  Padding2 = protoInt64.zero;

  constructor(data?: PartialMessage<Desc>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "desc.Desc";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "FQName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Help", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ConstLabelPairs", kind: "message", T: LabelPair, repeated: true },
    { no: 4, name: "VariableLabels", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "ID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "DimHash", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "_padding1", kind: "scalar", T: 6 /* ScalarType.FIXED64 */ },
    { no: 8, name: "_padding2", kind: "scalar", T: 6 /* ScalarType.FIXED64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Desc {
    return new Desc().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Desc {
    return new Desc().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Desc {
    return new Desc().fromJsonString(jsonString, options);
  }

  static equals(a: Desc | PlainMessage<Desc> | undefined, b: Desc | PlainMessage<Desc> | undefined): boolean {
    return proto3.util.equals(Desc, a, b);
  }
}

